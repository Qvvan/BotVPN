import logging

from aiogram import Bot
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

from config_data import config


class CustomLogger:
    def __init__(self, name: str):
        self.logger = logging.getLogger(name)
        logging.basicConfig(
            format="%(levelname)s - %(asctime)s - %(name)s - %(filename)s - line: %(lineno)d - %(message)s",
            level=logging.INFO
        )

    async def notify_group(self, message: str, error: Exception = False):
        """–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É (–æ—à–∏–±–∫–∏ –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)."""
        group_id = config.ERROR_GROUP_ID if error else config.INFO_GROUP_ID
        notification_type = "üö® –û—à–∏–±–∫–∞:\n" if error else "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"

        async with Bot(
                token=config.BOT_TOKEN,
                default=DefaultBotProperties(parse_mode=ParseMode.HTML)
        ) as bot:
            await bot.send_message(chat_id=group_id, text=f"{notification_type}{message}:{error}")

    async def log_info(self, message: str):
        """–õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."""
        self.logger.info(message)
        await self.notify_group(message)

    async def log_error(self, message: str, error: Exception):
        """–õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."""
        full_message = f"{message}. Error: {str(error)}"
        self.logger.error(full_message)
        await self.notify_group(message, error)


# –≠–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
logger = CustomLogger(__name__)
