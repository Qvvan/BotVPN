from aiogram import Router, F
from aiogram.types import LabeledPrice, Message, PreCheckoutQuery

from keyboards.kb_inline import InlineKeyboards
from services.services import process_successful_payment

router = Router()


async def send_invoice_handler(message: Message, price_service: int, service_name: str, service_id, duration_days: str, server_id: str):
    prices = [LabeledPrice(label="XTR", amount=price_service)]
    await message.answer_invoice(
        title=f"VPN –Ω–∞ {service_name}",
        description=f"–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏, –æ–ø–ª–∞—Ç–∏ {price_service} –∑–≤–µ–∑–¥ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ.\n"
                    f"‚¨áÔ∏è –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã, —Ç–µ–±–µ –±—É–¥—É—Ç –≤—ã—Å–ª–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è VPN. üòé",
        prices=prices,
        provider_token="",
        payload=f"{service_id}:{duration_days}:{server_id}",
        currency="XTR",
        reply_markup=await InlineKeyboards.create_pay(price_service),
    )


@router.pre_checkout_query()
async def pre_checkout_query(query: PreCheckoutQuery):
    await query.answer(ok=True)


@router.message(F.successful_payment)
async def successful_payment(message: Message):
    await process_successful_payment(message)
